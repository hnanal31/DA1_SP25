/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import repository.*;
import entity.*;
import java.awt.Color;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.concurrent.atomic.AtomicInteger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import response.SanPhamChiTietResponse;

/**
 *
 * @author 
 */
public class SanPhamChiTietDialog extends javax.swing.JDialog {

    SanPhamChiTietRepo chiTietRepo = new SanPhamChiTietRepo();
    ThuocTinhRepo thuocTinhRepo = new ThuocTinhRepo();

    private Integer idsp = 0;
    
    public SanPhamChiTietDialog(java.awt.Frame parent, boolean modal, Integer idSP, String tenSP) {
        super(parent, modal);
        
        initComponents();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        
        this.idsp = idSP;
        this.tblProductDetail.setRowHeight(25);
        this.loadDataToTable(chiTietRepo.getProductDetailByIdProduct(idSP));
        cbbProductName.addItem(tenSP);
        lbl.setText("Các sản phẩm chi tiết của: " + tenSP);

        //Load trọng lượng
        this.loadDataToCombobox(cbbChatLieu, thuocTinhRepo.getChatLieu());
        //Load diem can bang
        this.loadDataToCombobox(cbbSize, thuocTinhRepo.getSize());
        //Load màu sắc
        this.loadDataToCombobox(cbbMauSac, thuocTinhRepo.getMauSac());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProductDetail = new javax.swing.JTable();
        btnXoa1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        lbl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbbProductName = new javax.swing.JComboBox<>();
        btnBack = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cbbMauSac = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtDonGiaSPCT = new javax.swing.JTextField();
        txtSoLuongSPCT = new javax.swing.JTextField();
        btnThemSPCT = new javax.swing.JButton();
        btnSuaSPCT = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        cbbChatLieu = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        cbbSize = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Danh Sách Sản Phẩm Chi Tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tblProductDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã SP", "ID SPCT", "Tên Sản Phẩm", "Màu Sắc", "Chất Liệu", "Size", "Số Lượng", "Đơn giá", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProductDetail.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblProductDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductDetailMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProductDetail);

        btnXoa1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoa1.setForeground(new java.awt.Color(204, 51, 0));
        btnXoa1.setText("Ngừng bán");
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 963, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXoa1)
                .addGap(49, 49, 49))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(btnXoa1)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Form Data"));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        lbl.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbl.setText("Sản phẩm: ");

        jLabel2.setText("Tên Sản Phẩm");

        jLabel4.setText("Số Lượng");

        cbbProductName.setEnabled(false);

        btnBack.setBackground(new java.awt.Color(153, 153, 153));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel11.setText("Màu Sắc");

        cbbMauSac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Đơn Giá");

        txtDonGiaSPCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDonGiaSPCTActionPerformed(evt);
            }
        });

        btnThemSPCT.setBackground(new java.awt.Color(0, 204, 102));
        btnThemSPCT.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemSPCT.setForeground(new java.awt.Color(255, 255, 255));
        btnThemSPCT.setText("Thêm Mới");
        btnThemSPCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPCTActionPerformed(evt);
            }
        });

        btnSuaSPCT.setBackground(new java.awt.Color(255, 204, 0));
        btnSuaSPCT.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSuaSPCT.setText("Sửa");
        btnSuaSPCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaSPCTActionPerformed(evt);
            }
        });

        jLabel12.setText("Chất Liệu");

        cbbChatLieu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setText("Size");

        cbbSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(cbbProductName, 0, 180, Short.MAX_VALUE)
                    .addComponent(txtSoLuongSPCT)
                    .addComponent(txtDonGiaSPCT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(cbbChatLieu, 0, 180, Short.MAX_VALUE)
                            .addComponent(cbbSize, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbbMauSac, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnThemSPCT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSuaSPCT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(49, 49, 49))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(333, 333, 333)
                .addComponent(lbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(lbl)
                .addGap(12, 12, 12)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel2))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel13))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSoLuongSPCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSuaSPCT))
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDonGiaSPCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThemSPCT))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblProductDetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductDetailMouseClicked

        this.showDataToForm();
    }//GEN-LAST:event_tblProductDetailMouseClicked

    private void showDataToForm() {
        Integer idSPCT = getSPCTID();
//        SanPhamChiTietResponse sanPhamChiTietResponse = chiTietRepo.getProductDetailResponseById(idSPCT);
        entity.SanPhamChiTiet spct = chiTietRepo.getProductDetailById(idSPCT);

        if (spct.getTrangThai() == 1) {
            btnXoa1.setText("Hoạt động");
            btnXoa1.setForeground(Color.GREEN);
            btnXoa1.setIcon(null);
        } else {
            btnXoa1.setText("Ngừng bán");
            btnXoa1.setForeground(Color.RED);
            btnXoa1.setIcon(null);
        }
        
        txtSoLuongSPCT.setText(spct.getSoLuong() + "");
        txtDonGiaSPCT.setText(spct.getGiaBan()+ "");

        showDataToCbb(thuocTinhRepo.getChatLieu(), cbbChatLieu, spct);
        showDataToCbb(thuocTinhRepo.getMauSac(), cbbMauSac, spct);
        showDataToCbb(thuocTinhRepo.getSize(), cbbSize, spct);
    }
    
    void showDataToCbb(List<?> listObj, JComboBox cbb, SanPhamChiTiet spct) {
        for (var obj : listObj) {

            if (obj instanceof ChatLieu chatLieu) {
                if (spct.getIdChatLieu()== chatLieu.getId()) {
                    cbb.setSelectedItem(obj);
                }
            }

            if (obj instanceof MauSac mauSac) {
                if (spct.getIdMau()== mauSac.getId()) {
                    cbb.setSelectedItem(obj);
                }
            }

            if (obj instanceof KichThuoc size) {
                if (spct.getIdSize()== size.getId()) {
                    cbb.setSelectedItem(obj);
                }
            }
        }
    }
    
    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
        int selectedRow = tblProductDetail.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Chọn sản phẩm chi tiết cần thay đổi trạng thái!");
            return;
        }
        if (getFormAddNewProductDetail() != null) {
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thay đổi trạng thái sản phẩm chi tiết này??", "Xác nhận thay đổi trạng thái", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                if (btnXoa1.getText().equalsIgnoreCase("Ngừng bán")) {
                    chiTietRepo.updateStatus(getSPCTID(), 1);
                    this.loadDataToTable(chiTietRepo.getProductDetailByIdProduct(this.idsp));
                } else {
                    chiTietRepo.updateStatus(getSPCTID(), 0);
                    this.loadDataToTable(chiTietRepo.getProductDetailByIdProduct(this.idsp));
                }

            }
        }
    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtDonGiaSPCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDonGiaSPCTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonGiaSPCTActionPerformed

    private void btnThemSPCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPCTActionPerformed
        SanPhamChiTiet spct = getFormAddNewProductDetail();
        //        Integer idSPCT = getSPCTID();
        //        SanPhamChiTietj sanPhamChiTiet = chiTietRepo.getProductDetailyId(idSPCT);
        if (spct != null) {
            //            if (checkLoopProductDetail(sanPhamChiTiet)) {
                int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm 1 sản phẩm chi tiết mới?", "Thêm sản phẩm chi tiết mới", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    System.out.println(getFormAddNewProductDetail());
                    chiTietRepo.createNewProductDetail(spct);
                    loadDataToTable(chiTietRepo.getProductDetailByIdProduct(this.idsp));
                }
                //            }

        }
    }//GEN-LAST:event_btnThemSPCTActionPerformed

    private Integer getSPCTID() {
        if (tblProductDetail.getSelectedRow() >= 0) {
            Integer idSPCT = Integer.valueOf(tblProductDetail.getValueAt(tblProductDetail.getSelectedRow(), 2).toString());
            return idSPCT;
        } else {
            JOptionPane.showMessageDialog(this, "Chọn sản phẩm chi tiết trên bảng để lấy id");
            return null;
        }

    }

    private boolean checkLoopProductDetail(SanPhamChiTiet spct) {
        SanPhamChiTiet spct2 = getFormAddNewProductDetail();
        if (spct2 != null) {
            if (spct.getIdCTSP()== spct2.getIdCTSP()) {
                return true;
            }
            if (spct.getIdSanPham()== spct2.getIdSanPham()
                    && spct.getIdMau()== spct2.getIdMau()
                    && spct.getIdChatLieu()== spct2.getIdChatLieu()
                    && spct.getIdSize()== spct2.getIdSize()) {
                JOptionPane.showMessageDialog(this, "Sản phẩm chi tiết này đã tồn tại");
                return false;
            }
        }
        return true;

    }

    private boolean checkLoopProductDetailUpdate(SanPhamChiTiet spct) {
        entity.SanPhamChiTiet spct2 = getFormAddNewProductDetail();
        if (spct2 != null) {
            if (spct.getIdCTSP()== getSPCTID()) {
                return true;
            }
            if (spct.getIdSanPham()== spct2.getIdSanPham()
                    && spct.getIdMau()== spct2.getIdMau()
                    && spct.getIdChatLieu()== spct2.getIdChatLieu()
                    && spct.getIdSize()== spct2.getIdSize()) {
                JOptionPane.showMessageDialog(this, "Sản phẩm chi tiết này đã tồn tại");
                return false;
            }
        }
        return true;

    }
    
    private void btnSuaSPCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaSPCTActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProductDetail.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Chọn sản phẩm chi tiết cần sửa!");
            return;
        }
        if (getFormAddNewProductDetail() != null) {
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn sửa spct?", "Sửa", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                SanPhamChiTiet spct = getFormAddNewProductDetail();
                Integer idSPCT = getSPCTID();
                SanPhamChiTiet sanPhamChiTiet = chiTietRepo.getProductDetailById(idSPCT);
                if (spct != null) {
                    spct.setIdCTSP(getSPCTID());
                    if (checkLoopProductDetailUpdate(sanPhamChiTiet)) {
                        System.out.println(getFormAddNewProductDetail());
                        chiTietRepo.updateProductDetail(spct);
                        loadDataToTable(chiTietRepo.getProductDetailByIdProduct(this.idsp));
                    }
                }
            }
        }
    }//GEN-LAST:event_btnSuaSPCTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SanPhamChiTietDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SanPhamChiTietDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SanPhamChiTietDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SanPhamChiTietDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SanPhamChiTietDialog dialog = new SanPhamChiTietDialog(new javax.swing.JFrame(), true, 1, "Áo Hoodie");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSuaSPCT;
    private javax.swing.JButton btnThemSPCT;
    private javax.swing.JButton btnXoa1;
    private javax.swing.JComboBox<String> cbbChatLieu;
    private javax.swing.JComboBox<String> cbbMauSac;
    private javax.swing.JComboBox<String> cbbProductName;
    private javax.swing.JComboBox<String> cbbSize;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl;
    private javax.swing.JTable tblProductDetail;
    private javax.swing.JTextField txtDonGiaSPCT;
    private javax.swing.JTextField txtSoLuongSPCT;
    // End of variables declaration//GEN-END:variables

    private void loadDataToTable(ArrayList<SanPhamChiTietResponse> list) {
        DefaultTableModel model = (DefaultTableModel) tblProductDetail.getModel();
        model.setRowCount(0);
        AtomicInteger index = new AtomicInteger(1);
        list.forEach(spct -> {
            model.addRow(new Object[]{
                index.getAndIncrement(), spct.getMaSanPham(), spct.getIdCTSP(),  spct.getTenSanPham(), spct.getMauSac(), spct.getChatLieu(), spct.getSize(), spct.getSoLuong(), spct.getGiaBan(), spct.getTrangThai() == 1 ? "Ngừng bán" : "Đang bán"
            });
        }
        );
    }

    private void loadDataToCombobox(JComboBox cbb, List<?> list) {
        DefaultComboBoxModel cmodel = (DefaultComboBoxModel) cbb.getModel();
        cmodel.removeAllElements();
        for (var obj : list) {
            cmodel.addElement(obj);
        }
    }

    private SanPhamChiTiet getFormAddNewProductDetail() {
        Integer soLuong;
        try {
            soLuong = Integer.valueOf(txtSoLuongSPCT.getText());
            if (soLuong < 1) {
                JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0");
                return null;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Số lượng phải là số");
            return null;
        }

        Double giaBan ;
        try {
            giaBan = Double.valueOf(txtDonGiaSPCT.getText());
            if (giaBan < 1) {
                JOptionPane.showMessageDialog(this, "Đơn giá phải lớn hơn 0");
                return null;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Đơn giá phải là số");
            return null;
        }

        // Kiểm tra màu sắc
MauSac mauSac = (MauSac) cbbMauSac.getSelectedItem();
if (mauSac == null) {
    JOptionPane.showMessageDialog(this, "Chưa chọn màu sắc!");
    return null;
}

// Kiểm tra chất liệu
ChatLieu chatLieu = (ChatLieu) cbbChatLieu.getSelectedItem();
if (chatLieu == null) {
    JOptionPane.showMessageDialog(this, "Chưa chọn chất liệu!");
    return null;
}


// Kiểm tra size
KichThuoc size = (KichThuoc) cbbSize.getSelectedItem();
if (size == null) {
    JOptionPane.showMessageDialog(this, "Chưa chọn size!");
    return null;
}


        return new SanPhamChiTiet(
                soLuong,
                giaBan,
                0,
                this.idsp,
                mauSac.getId(),
                size.getId(),
                chatLieu.getId()
        );
    }
    //Hàm này có tác dụng format lại tiền

    private String formatCash(Double price) {
        try {
            NumberFormat currencyFormatter = NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));
            String formated = currencyFormatter.format(price);
            return formated;
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Có lỗi trong quá trình format");
            return "";
        }

    }

    //Hàm này có tác dụng format lại tiền
    private String formatCash(float price) {
        try {
            NumberFormat currencyFormatter = NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));
            String formated = currencyFormatter.format(price);
            return formated;
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Có lỗi trong quá trình format");
            return "";
        }

    }
    
}


